{"version":3,"file":"lobox-selectbox.es.js","sources":["../lib/components/SelectBox/components/SelectboxContext.ts","../node_modules/clsx/dist/clsx.mjs","../node_modules/lucide-react/dist/esm/shared/src/utils.js","../node_modules/lucide-react/dist/esm/defaultAttributes.js","../node_modules/lucide-react/dist/esm/Icon.js","../node_modules/lucide-react/dist/esm/createLucideIcon.js","../node_modules/lucide-react/dist/esm/icons/check.js","../node_modules/lucide-react/dist/esm/icons/chevron-down.js","../lib/components/SelectBox/components/SelectboxOption.tsx","../lib/components/SelectBox/components/SelectboxOptions.tsx","../lib/hooks/useClickOutside.ts","../lib/components/SelectBox/components/SelectboxRoot.tsx","../lib/components/SelectBox/components/SelectBoxTrigger.tsx","../lib/components/SelectBox/components/index.ts","../lib/components/SelectBox/index.tsx"],"sourcesContent":["import { ChangeEvent, createContext, KeyboardEvent, useContext } from \"react\";\n\nimport { OptionItem } from \"./types\";\n\ninterface SelectBoxContextProps {\n  isOpen: boolean;\n  searchValue: string;\n  selectedOptions: string[];\n  options: OptionItem[];\n  filteredOptions: OptionItem[];\n  handleToggle: () => void;\n  handleSearchChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleSearchInputKeyDown: (event: KeyboardEvent<HTMLInputElement>) => void;\n  handleOptionClick: (option: OptionItem) => void;\n  handleAddNewItem: () => void;\n  handleKeyDown: (event: KeyboardEvent<HTMLElement>) => void;\n}\n\nexport const SelectBoxContext = createContext<SelectBoxContextProps | undefined>(undefined);\n\nexport const useSelectBoxContext = (): SelectBoxContextProps => {\n  const context = useContext(SelectBoxContext);\n  if (!context) {\n    throw new Error(\"SelectBox components must be used within a SelectBox.Root\");\n  }\n  return context;\n};\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && array.indexOf(className) === index;\n}).join(\" \");\n\nexport { mergeClasses, toKebabCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),\n      ...props\n    })\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Check = createLucideIcon(\"Check\", [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]]);\n\nexport { Check as default };\n//# sourceMappingURL=check.js.map\n","/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronDown = createLucideIcon(\"ChevronDown\", [\n  [\"path\", { d: \"m6 9 6 6 6-6\", key: \"qrunsl\" }]\n]);\n\nexport { ChevronDown as default };\n//# sourceMappingURL=chevron-down.js.map\n","import clsx from \"clsx\";\nimport { Check } from \"lucide-react\";\n\nimport { useSelectBoxContext } from \"./SelectboxContext.ts\";\nimport type { OptionItem } from \"./types\";\n\nimport styles from \"./styles.module.scss\";\n\ninterface SelectBoxOptionProps {\n  option: OptionItem;\n}\n\nexport const SelectBoxOption = ({ option }: SelectBoxOptionProps) => {\n  const { selectedOptions, handleOptionClick, handleKeyDown } = useSelectBoxContext();\n  const isSelected = selectedOptions.includes(option.value);\n\n  return (\n    <li\n      className={clsx(styles[\"selectbox__option\"], {\n        [styles[\"selectbox__option--selected\"]]: isSelected,\n      })}\n      onClick={() => handleOptionClick(option)}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"option\"\n      aria-selected={isSelected ? \"true\" : \"false\"}\n    >\n      {option.label}\n      {isSelected && <Check width={16} height={16} />}\n    </li>\n  );\n};\n","import { useSelectBoxContext } from \"./SelectboxContext\";\nimport { SelectBoxOption } from \"./SelectboxOption\";\n\nimport styles from \"./styles.module.scss\";\n\nexport const SelectboxOptions = () => {\n  const { isOpen, filteredOptions, handleAddNewItem, handleKeyDown } = useSelectBoxContext();\n\n  if (!isOpen) return null;\n\n  return (\n    <ul className={styles[\"selectbox__options\"]} role=\"listbox\" aria-multiselectable=\"true\">\n      {!filteredOptions.length && (\n        <li\n          className={styles[\"selectbox__option\"]}\n          onClick={handleAddNewItem}\n          onKeyDown={handleKeyDown}\n          tabIndex={0}\n          role=\"option\"\n          aria-selected=\"false\"\n        >\n          Add new option\n        </li>\n      )}\n      {filteredOptions.map(option => (\n        <SelectBoxOption key={option.value} option={option} />\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const useClickOutside = <T extends HTMLElement>(callbackFn: () => void) => {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        callbackFn();\n      }\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [callbackFn]);\n\n  return ref;\n};\n","import { useClickOutside } from \"@lib/hooks\";\nimport { useState, useMemo, ChangeEvent, KeyboardEvent, ReactNode, useEffect } from \"react\";\n\nimport { SelectBoxContext } from \"./SelectboxContext\";\nimport { OptionItem } from \"./types\";\n\nimport styles from \"./styles.module.scss\";\n\nexport interface SelectBoxProviderProps {\n  children: ReactNode;\n  name: string;\n  defaultValue?: string[];\n  options: OptionItem[];\n  onAddNewItem: (option: OptionItem) => void;\n  onChange?: (option: OptionItem) => void;\n}\n\nexport const SelectboxRoot = ({ children, defaultValue, options, onAddNewItem, onChange }: SelectBoxProviderProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n  const selectRef = useClickOutside<HTMLDivElement>(() => {\n    setIsOpen(false);\n  });\n\n  useEffect(() => {\n    if (defaultValue) {\n      setSelectedOptions(defaultValue);\n    }\n  }, [defaultValue]);\n\n  const filteredOptions = useMemo(() => {\n    return options.filter(\n      option =>\n        option.label.toLowerCase().includes(searchValue.toLowerCase()) ||\n        option.value.toLowerCase().includes(searchValue.toLowerCase()),\n    );\n  }, [options, searchValue]);\n\n  const handleToggle = () => setIsOpen(prevIsOpen => !prevIsOpen);\n\n  const handleSearchChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (!isOpen) setIsOpen(true);\n    setSearchValue(event.target.value);\n  };\n\n  const handleSearchInputKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\" && !!searchValue) {\n      const isOptionExists = options.find(option => option.value === searchValue);\n      if (isOptionExists) {\n        handleOptionClick(isOptionExists);\n      } else {\n        handleAddNewItem();\n      }\n    }\n  };\n\n  const handleOptionClick = (option: OptionItem) => {\n    if (selectedOptions.includes(option.value)) {\n      const updatedOptions = selectedOptions.filter(optionItem => optionItem !== option.value);\n      setSelectedOptions(updatedOptions);\n    } else {\n      setSelectedOptions([...selectedOptions, option.value]);\n    }\n    onChange?.(option);\n    setIsOpen(false);\n  };\n\n  const handleAddNewItem = () => {\n    const newItem = { value: searchValue, label: searchValue };\n    onAddNewItem(newItem);\n    onChange?.(newItem);\n    setSelectedOptions([...selectedOptions, searchValue]);\n    setSearchValue(\"\");\n    setIsOpen(false);\n  };\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLElement>) => {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      handleToggle();\n      event.preventDefault();\n    }\n  };\n\n  return (\n    <SelectBoxContext.Provider\n      value={{\n        isOpen,\n        searchValue,\n        selectedOptions,\n        options,\n        filteredOptions,\n        handleToggle,\n        handleSearchChange,\n        handleSearchInputKeyDown,\n        handleOptionClick,\n        handleAddNewItem,\n        handleKeyDown,\n      }}\n    >\n      <div\n        className={styles[\"selectbox__wrapper\"]}\n        ref={selectRef}\n        role=\"combobox\"\n        aria-expanded={isOpen ? \"true\" : \"false\"}\n        aria-haspopup=\"listbox\"\n        aria-owns=\"selectbox__options\"\n        aria-controls=\"selectbox__options\"\n      >\n        {children}\n      </div>\n    </SelectBoxContext.Provider>\n  );\n};\n","import { ChevronDown } from \"lucide-react\";\n\nimport { useSelectBoxContext } from \"./SelectboxContext\";\n\nimport styles from \"./styles.module.scss\";\n\nexport const SelectBoxTrigger = () => {\n  const { searchValue, handleToggle, handleSearchChange, handleKeyDown, handleSearchInputKeyDown, isOpen } =\n    useSelectBoxContext();\n\n  return (\n    <div\n      className={styles[\"selectbox__trigger\"]}\n      onClick={handleToggle}\n      role=\"button\"\n      tabIndex={0}\n      aria-expanded={isOpen ? \"true\" : \"false\"}\n      onKeyDown={handleKeyDown}\n    >\n      <input\n        type=\"text\"\n        value={searchValue}\n        placeholder=\"Type something\"\n        className={styles[\"selectbox__search-input\"]}\n        onChange={handleSearchChange}\n        onKeyDown={handleSearchInputKeyDown}\n        aria-autocomplete=\"none\"\n        aria-controls=\"selectbox__options\"\n      />\n      <ChevronDown className={styles[\"selectbox__trigger-icon\"]} width={20} height={20} />\n    </div>\n  );\n};\n","import { SelectboxOptions } from \"./SelectboxOptions\";\nimport { SelectboxRoot } from \"./SelectboxRoot\";\nimport { SelectBoxTrigger } from \"./SelectBoxTrigger\";\n\nexport type { OptionItem } from \"./types\";\n\nexport const LoboxSelectbox = Object.freeze({\n  Root: SelectboxRoot,\n  Trigger: SelectBoxTrigger,\n  Options: SelectboxOptions,\n});\n","import { LoboxSelectbox } from \"./components\";\nimport type { OptionItem } from \"./components\";\n\ninterface SelectBoxProps {\n  name: string;\n  defaultValue?: string[];\n  options: OptionItem[];\n  onAddNewItem: (option: OptionItem) => void;\n  onChange?: (option: OptionItem) => void;\n}\n\nexport const SelectBox = ({ name, defaultValue, options, onAddNewItem, onChange }: SelectBoxProps) => {\n  return (\n    <LoboxSelectbox.Root\n      name={name}\n      defaultValue={defaultValue}\n      options={options}\n      onAddNewItem={onAddNewItem}\n      onChange={onChange}\n    >\n      <LoboxSelectbox.Trigger />\n      <LoboxSelectbox.Options />\n    </LoboxSelectbox.Root>\n  );\n};\n"],"names":["SelectBoxContext","createContext","useSelectBoxContext","context","useContext","r","f","n","o","clsx","toKebabCase","string","mergeClasses","classes","className","index","array","defaultAttributes","Icon","forwardRef","color","size","strokeWidth","absoluteStrokeWidth","children","iconNode","rest","ref","createElement","tag","attrs","createLucideIcon","iconName","Component","props","Check","ChevronDown","SelectBoxOption","option","selectedOptions","handleOptionClick","handleKeyDown","isSelected","jsxs","styles","jsx","SelectboxOptions","isOpen","filteredOptions","handleAddNewItem","useClickOutside","callbackFn","useRef","useEffect","handleClickOutside","event","SelectboxRoot","defaultValue","options","onAddNewItem","onChange","setIsOpen","useState","searchValue","setSearchValue","setSelectedOptions","selectRef","useMemo","handleToggle","prevIsOpen","handleSearchChange","handleSearchInputKeyDown","isOptionExists","updatedOptions","optionItem","newItem","SelectBoxTrigger","LoboxSelectbox","SelectBox","name"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7]}